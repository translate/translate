name: Tests

on:
  push:
    branches-ignore:
    - dependabot/**
    - deepsource**
  pull_request:

permissions:
  contents: read

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        requirements: [latest]
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'
        - '3.14'
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        include:
        - requirements: minimal
          python-version: '3.9'
          os: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        allow-prereleases: true
        python-version: ${{ matrix.python-version }}
    - uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
      with:
        cache-suffix: ${{ matrix.python-version }}
    - name: Install apt dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgettextpo-dev libxml2-dev libxmlsec1-dev gettext hunspell-af
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        nuget install Gettext.Tools -Version 0.22.4 -OutputDirectory c:\nuget;
        Add-Content $env:GITHUB_PATH "C:\nuget\Gettext.Tools.0.22.4\tools\bin"
    - name: Minimalize deps
      if: matrix.requirements == 'minimal'
      run: sed -i '/^ *"/ s/>=/==/' pyproject.toml
    - name: Install pip dependencies
      run: uv sync --all-extras --dev
    - name: pytest
      run: make test
    - name: test-functional
      if: matrix.os == 'ubuntu-latest'
      env:
        PYTHON_ARGS: -m coverage run --append --source ${{ github.workspace }}/translate
        COVERAGE_FILE: ${{ github.workspace }}/.coverage
      run: |
        source .venv/bin/activate
        make test-functional
    - name: Coverage
      run: uv run coverage xml
    - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        name: ${{ runner.os }}, Python ${{ matrix.python-version }}, ${{ matrix.requirements }}
