name: Test on Linux

on:
  push:
    paths-ignore:
    - "docs/**"
  pull_request:
    paths-ignore:
    - "docs/**"

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        requirements: [latest]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        include:
          - os: ubuntu-latest
            python-version: 2.7
            requirements: minimal

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgettextpo-dev libxml2-dev libxmlsec1-dev gettext
    - name: Update pip
      run: pip install --upgrade pip wheel
    - name: Install pip dependencies
      if: matrix.requirements == 'latest'
      run: pip install -r requirements/dev.txt
    - name: Install pip dependencies
      if: matrix.requirements == 'minimal'
      run: |
        make requirements/min-versions.txt
        cat requirements/min-versions.txt
        pip install -r requirements/min-versions.txt
    - name: Compile all the files
      run: python -m compileall -q -f .
    - name: Setup build
      run: python setup.py --quiet build
    - name: Install
      run: pip install .
    - name: py.test
      run: py.test --cov=. -r EfsxX -W error::DeprecationWarning
    - name: test-functional
      run: make test-functional
    - name: Coverage
      run: |
        coverage xml
    - uses: codecov/codecov-action@v1
      with:
        name: ${{ runner.os }}, Python ${{ matrix.python-version }}, ${{ matrix.requirements }}
